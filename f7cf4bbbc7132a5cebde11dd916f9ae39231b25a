{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4591e95e_62ffd1e8",
        "filename": "src/main/antlr/cqp/CQP.g4",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 19
      },
      "writtenOn": "2022-08-31T16:04:38Z",
      "side": 1,
      "message": "What do these comments mean?",
      "range": {
        "startLine": 23,
        "startChar": 79,
        "endLine": 23,
        "endChar": 81
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29eb4e15_6e652aa4",
        "filename": "src/main/antlr/cqp/CQP.g4",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 36
      },
      "writtenOn": "2022-09-06T10:25:48Z",
      "side": 1,
      "message": "They are messages to me to delete or discuss with you before merging.",
      "parentUuid": "4591e95e_62ffd1e8",
      "range": {
        "startLine": 23,
        "startChar": 79,
        "endLine": 23,
        "endChar": 81
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10d589c6_5a3d87cc",
        "filename": "src/main/antlr/cqp/CQP.g4",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 19
      },
      "writtenOn": "2022-09-15T09:32:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "29eb4e15_6e652aa4",
      "range": {
        "startLine": 23,
        "startChar": 79,
        "endLine": 23,
        "endChar": 81
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c0ce346_a58dc35d",
        "filename": "src/main/antlr/cqp/CQP.g4",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 19
      },
      "writtenOn": "2022-08-31T16:04:38Z",
      "side": 1,
      "message": "Does that mean the l-flag is just like the \u0027\u0027-strings in PQ+?",
      "range": {
        "startLine": 37,
        "startChar": 61,
        "endLine": 37,
        "endChar": 89
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c17edb87_e0828acf",
        "filename": "src/main/antlr/cqp/CQP.g4",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 36
      },
      "writtenOn": "2022-11-17T11:08:40Z",
      "side": 1,
      "message": "l-flag is verbatim in CQP, which in PQ+ is treated with \"",
      "parentUuid": "1c0ce346_a58dc35d",
      "range": {
        "startLine": 37,
        "startChar": 61,
        "endLine": 37,
        "endChar": 89
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d232b12_b1403054",
        "filename": "src/main/antlr/cqp/CQP.g4",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 19
      },
      "writtenOn": "2022-11-24T12:39:29Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c17edb87_e0828acf",
      "range": {
        "startLine": 37,
        "startChar": 61,
        "endLine": 37,
        "endChar": 89
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ce55e66_6c50b6f1",
        "filename": "src/main/antlr/cqp/CQP.g4",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 19
      },
      "writtenOn": "2022-08-31T16:04:38Z",
      "side": 1,
      "message": "I introduced https://korap.ids-mannheim.de/gerrit/c/KorAP/Koral/+/6023, so this path can be simplified.",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 83,
        "endChar": 43
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89f45c4f_f3dedb07",
        "filename": "src/main/antlr/cqp/CQP.g4",
        "patchSetId": 1
      },
      "lineNbr": 156,
      "author": {
        "id": 19
      },
      "writtenOn": "2022-08-31T16:04:38Z",
      "side": 1,
      "message": "Can you give an example for that pattern? Removing this line (and line 158) does not change the test behaviour, so it\u0027s at least not tested, I guess.",
      "range": {
        "startLine": 156,
        "startChar": 7,
        "endLine": 156,
        "endChar": 26
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a22f6fc5_f8baede1",
        "filename": "src/main/antlr/cqp/CQP.g4",
        "patchSetId": 1
      },
      "lineNbr": 156,
      "author": {
        "id": 36
      },
      "writtenOn": "2022-11-24T14:24:22Z",
      "side": 1,
      "message": "This rule also comes from PQ+ implementation and is also tested there. When commenting the line, two tests are failing: testUnknownLayerLikeCase() and testLayerWithFlag().\nIn the example: query\u003d \"[mate/x\u003dBaum/i]\", /x is parsed as flag (I introduced a test for the grammar, to be more clear); later in the processor, it is dealt as layer again?? I don\u0027t know and trying to guess what was the intention for this...",
      "parentUuid": "89f45c4f_f3dedb07",
      "range": {
        "startLine": 156,
        "startChar": 7,
        "endLine": 156,
        "endChar": 26
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f3325de_9c865b94",
        "filename": "src/main/antlr/cqp/CQP.g4",
        "patchSetId": 1
      },
      "lineNbr": 156,
      "author": {
        "id": 19
      },
      "writtenOn": "2022-11-24T14:43:32Z",
      "side": 1,
      "message": "Wow - that\u0027s quite a weird approach ... okay. I guess there is a reason for that, though.",
      "parentUuid": "a22f6fc5_f8baede1",
      "range": {
        "startLine": 156,
        "startChar": 7,
        "endLine": 156,
        "endChar": 26
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d698826_3912bea7",
        "filename": "src/main/antlr/cqp/CQP.g4",
        "patchSetId": 1
      },
      "lineNbr": 228,
      "author": {
        "id": 19
      },
      "writtenOn": "2022-08-31T16:04:38Z",
      "side": 1,
      "message": "This currently allows for, e.g., `\u003ccorenlp/c\u003dNP!!!!\u003e`",
      "range": {
        "startLine": 228,
        "startChar": 4,
        "endLine": 228,
        "endChar": 129
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa6af7c9_73f4a7cc",
        "filename": "src/main/antlr/cqp/CQP.g4",
        "patchSetId": 1
      },
      "lineNbr": 228,
      "author": {
        "id": 36
      },
      "writtenOn": "2022-11-18T14:31:39Z",
      "side": 1,
      "message": "It is coming from the PQ+ implementation, the NEG* there is meant to deal with the following types of query:\nquery \u003d \"\u003ccnx/c!\u003dvp !(class!\u003dheader)\u003e\"; \nquery \u003d \"\u003ccnx/c!\u003dvp !(class\u003dheader \u0026 id\u003d7)\u003e\";\n\nChanged the rule to:\nspan\n: (skey // for lbound/sbound; check how it works for meet!\n  | LT ((foundry SLASH)? layer termOp)? \u0027/\u0027? skey ((  NEG* LRPAREN term RRPAREN|  NEG* LRPAREN termGroup RRPAREN)? | ( NEG* term|  NEG* termGroup)?) GT\n  )\n;\n\nDid the same for closingspan in CQP and for span in PQ+. \nAdded tests to prove that  \u003ccorenlp/c\u003dNP!!!!\u003e doesn\u0027t pass anymore. \n\nDo you have ideas for simplifying the rules?",
      "parentUuid": "3d698826_3912bea7",
      "range": {
        "startLine": 228,
        "startChar": 4,
        "endLine": 228,
        "endChar": 129
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae29a62e_f0b8ee51",
        "filename": "src/main/antlr/cqp/CQP.g4",
        "patchSetId": 1
      },
      "lineNbr": 228,
      "author": {
        "id": 19
      },
      "writtenOn": "2022-11-24T12:39:29Z",
      "side": 1,
      "message": "I am not really sure ... but `( NEG ( term | termGroup | ( LRPAREN (term | termGroup) RRPAREN ) ) )?` should be fine, right?",
      "parentUuid": "aa6af7c9_73f4a7cc",
      "range": {
        "startLine": 228,
        "startChar": 4,
        "endLine": 228,
        "endChar": 129
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ff1a05d_213e28e8",
        "filename": "src/main/antlr/cqp/CQP.g4",
        "patchSetId": 1
      },
      "lineNbr": 234,
      "author": {
        "id": 19
      },
      "writtenOn": "2022-08-31T16:04:38Z",
      "side": 1,
      "message": "This currently allows for, e.g., `\u003c/corenlp/c\u003dNP!!!!\u003e`",
      "range": {
        "startLine": 234,
        "startChar": 7,
        "endLine": 234,
        "endChar": 129
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a46374ad_c6026d0a",
        "filename": "src/main/antlr/cqp/CQP.g4",
        "patchSetId": 1
      },
      "lineNbr": 234,
      "author": {
        "id": 36
      },
      "writtenOn": "2022-11-18T14:32:53Z",
      "side": 1,
      "message": "Solved as with the span rule.",
      "parentUuid": "3ff1a05d_213e28e8",
      "range": {
        "startLine": 234,
        "startChar": 7,
        "endLine": 234,
        "endChar": 129
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ef9f06b_e6e0c2c7",
        "filename": "src/main/antlr/cqp/CQP.g4",
        "patchSetId": 1
      },
      "lineNbr": 234,
      "author": {
        "id": 19
      },
      "writtenOn": "2022-11-24T12:39:29Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a46374ad_c6026d0a",
      "range": {
        "startLine": 234,
        "startChar": 7,
        "endLine": 234,
        "endChar": 129
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f09f86a4_f1ebd5f2",
        "filename": "src/main/antlr/cqp/CQP.g4",
        "patchSetId": 1
      },
      "lineNbr": 391,
      "author": {
        "id": 19
      },
      "writtenOn": "2022-09-05T14:46:57Z",
      "side": 1,
      "message": "This rule seems to be already covered by the line before. Removing it doesn\u0027t alter the test result.",
      "range": {
        "startLine": 391,
        "startChar": 0,
        "endLine": 391,
        "endChar": 43
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1c3afe1e_9dc2bc85",
        "filename": "src/main/antlr/cqp/CQP.g4",
        "patchSetId": 1
      },
      "lineNbr": 391,
      "author": {
        "id": 36
      },
      "writtenOn": "2022-11-18T13:04:17Z",
      "side": 1,
      "message": "true, i deleted it.",
      "parentUuid": "f09f86a4_f1ebd5f2",
      "range": {
        "startLine": 391,
        "startChar": 0,
        "endLine": 391,
        "endChar": 43
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "540ddbe8_bfee1cb3",
        "filename": "src/test/java/de/ids_mannheim/korap/query/test/cqp/CQPPositionTest.java",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 19
      },
      "writtenOn": "2022-09-05T14:46:57Z",
      "side": 1,
      "message": "Please remove these comments before the merge.",
      "range": {
        "startLine": 36,
        "startChar": 4,
        "endLine": 36,
        "endChar": 56
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe83fe84_45d1e933",
        "filename": "src/test/java/de/ids_mannheim/korap/query/test/cqp/CQPPositionTest.java",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 36
      },
      "writtenOn": "2022-11-17T14:43:10Z",
      "side": 1,
      "message": "done",
      "parentUuid": "540ddbe8_bfee1cb3",
      "range": {
        "startLine": 36,
        "startChar": 4,
        "endLine": 36,
        "endChar": 56
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84a6895a_96b828f4",
        "filename": "src/test/java/de/ids_mannheim/korap/query/test/cqp/CQPPositionTest.java",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 19
      },
      "writtenOn": "2022-09-05T14:46:57Z",
      "side": 1,
      "message": "Shouldn\u0027t the focus be on \"copil cuminte\"?",
      "range": {
        "startLine": 61,
        "startChar": 22,
        "endLine": 61,
        "endChar": 37
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f20453d_c29a1922",
        "filename": "src/test/java/de/ids_mannheim/korap/query/test/cqp/CQPPositionTest.java",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 36
      },
      "writtenOn": "2022-09-06T10:25:48Z",
      "side": 1,
      "message": "yes, you are right, i have to solve this",
      "parentUuid": "84a6895a_96b828f4",
      "range": {
        "startLine": 61,
        "startChar": 22,
        "endLine": 61,
        "endChar": 37
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d77738cc_33cf93b6",
        "filename": "src/test/java/de/ids_mannheim/korap/query/test/cqp/CQPPositionTest.java",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 19
      },
      "writtenOn": "2022-11-24T12:39:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3f20453d_c29a1922",
      "range": {
        "startLine": 61,
        "startChar": 22,
        "endLine": 61,
        "endChar": 37
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd233d78_4b94fd3c",
        "filename": "src/test/java/de/ids_mannheim/korap/query/test/cqp/CQPPositionTest.java",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 19
      },
      "writtenOn": "2022-09-05T14:46:57Z",
      "side": 1,
      "message": "Why is the focus on \"cuminte\" only?",
      "range": {
        "startLine": 153,
        "startChar": 6,
        "endLine": 153,
        "endChar": 38
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0295e23c_e0baa127",
        "filename": "src/test/java/de/ids_mannheim/korap/query/test/cqp/CQPPositionTest.java",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 19
      },
      "writtenOn": "2022-09-05T14:46:57Z",
      "side": 1,
      "message": "This serialization indicates that the first and the last sentence marker are definitely identical. But that has not to be true with CQP, right? There may be multiple sentences in between, I guess.\nThe same is true in the following examples.",
      "range": {
        "startLine": 180,
        "startChar": 17,
        "endLine": 180,
        "endChar": 57
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf509d8b_6ffa97a7",
        "filename": "src/test/java/de/ids_mannheim/korap/query/test/cqp/CQPPositionTest.java",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 36
      },
      "writtenOn": "2022-09-06T10:25:48Z",
      "side": 1,
      "message": "As i understand specifications in Section 4.2 Structural attributes of the CQP tutorial (https://cwb.sourceforge.io/files/CQP_Manual.pdf),  specifically the citation: \"pairs of start/end tags enclose single region (if StrictRegions option is enabled)\" there may not be multiples sentences in between (if we assume StrictRegions option enabled). The searching in https://cqpweb.lancs.ac.uk/bncxmlweb/, for example, works like the option is enabled. I looked for: \u003cs\u003e []* \"child\" []* \u003c/s\u003e.",
      "parentUuid": "0295e23c_e0baa127",
      "range": {
        "startLine": 180,
        "startChar": 17,
        "endLine": 180,
        "endChar": 57
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a271b482_fa9627b2",
        "filename": "src/test/java/de/ids_mannheim/korap/query/test/cqp/CQPPositionTest.java",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 19
      },
      "writtenOn": "2022-09-15T09:32:16Z",
      "side": 1,
      "message": "Does that mean, depending on an option, the serialisation may be different?",
      "parentUuid": "bf509d8b_6ffa97a7",
      "range": {
        "startLine": 180,
        "startChar": 17,
        "endLine": 180,
        "endChar": 57
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74a94eb3_1cbe9996",
        "filename": "src/test/java/de/ids_mannheim/korap/query/test/cqp/CQPPositionTest.java",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 36
      },
      "writtenOn": "2022-11-17T12:56:29Z",
      "side": 1,
      "message": "As I understood it, the sole purpose of this type of query is to restrict the search to a single sentence, otherwise you can simply search for the string \"copil/child\". What would be the meaning of a result with multiple sentences in between the sentence markers? I assume the user wants to see the whole sentence context for the string and for this they can use the sentence markers. The tutorial specificies that StrictRegion should be enabled, but cqpweb, which is what i tried to emulate, assumes this option as implicitly enabled(cqpweb doesn\u0027t have the possibility to select such type of option and i assume we don\u0027t want to complicate things also). Therefore, i implemented this restriction to a single sentence.",
      "parentUuid": "a271b482_fa9627b2",
      "range": {
        "startLine": 180,
        "startChar": 17,
        "endLine": 180,
        "endChar": 57
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "41ec244a_3d290cf1",
        "filename": "src/test/java/de/ids_mannheim/korap/query/test/cqp/CQPPositionTest.java",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 19
      },
      "writtenOn": "2022-11-24T12:39:29Z",
      "side": 1,
      "message": "That\u0027s interesting! I thought, CQP or rather Corpus Workbench wouldn\u0027t be able to check for pairing of these tags - but I wasn\u0027t able to find something cross-sentences. So your serialization is correct!",
      "parentUuid": "74a94eb3_1cbe9996",
      "range": {
        "startLine": 180,
        "startChar": 17,
        "endLine": 180,
        "endChar": 57
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4d43f44_73327126",
        "filename": "src/test/java/de/ids_mannheim/korap/query/test/cqp/CQPQueryProcessorTest.java",
        "patchSetId": 1
      },
      "lineNbr": 712,
      "author": {
        "id": 19
      },
      "writtenOn": "2022-09-06T10:08:09Z",
      "side": 1,
      "message": "Better remove these lines that are inappropriate for CQP.",
      "range": {
        "startLine": 708,
        "startChar": 3,
        "endLine": 712,
        "endChar": 80
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a863ae89_2216824d",
        "filename": "src/test/java/de/ids_mannheim/korap/query/test/cqp/CQPQueryProcessorTest.java",
        "patchSetId": 1
      },
      "lineNbr": 712,
      "author": {
        "id": 36
      },
      "writtenOn": "2022-11-17T13:20:45Z",
      "side": 1,
      "message": "done",
      "parentUuid": "d4d43f44_73327126",
      "range": {
        "startLine": 708,
        "startChar": 3,
        "endLine": 712,
        "endChar": 80
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "822a0467_7ab98ab4",
        "filename": "src/test/java/de/ids_mannheim/korap/query/test/cqp/CQPQueryProcessorTest.java",
        "patchSetId": 1
      },
      "lineNbr": 849,
      "author": {
        "id": 19
      },
      "writtenOn": "2022-09-06T10:08:09Z",
      "side": 1,
      "message": "Are these tests not ready?",
      "range": {
        "startLine": 849,
        "startChar": 3,
        "endLine": 849,
        "endChar": 11
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f924432d_23cbc2cd",
        "filename": "src/test/java/de/ids_mannheim/korap/query/test/cqp/CQPQueryProcessorTest.java",
        "patchSetId": 1
      },
      "lineNbr": 849,
      "author": {
        "id": 36
      },
      "writtenOn": "2022-11-17T13:33:11Z",
      "side": 1,
      "message": "These are tests concerning relational operators (relatesTo, dominates, dependency) that were present in the PQ grammar but i couldn\u0027t find equivalent in the CQP tutorial. I thought that if they are used in korap, we could extend the CQP implementation with these too at some point. Now, they are present in the CQP grammar and dealt with (partially) in the serializer: some of the tests you mentioned are passing and other don\u0027t. We should decide if:\n1. we want to extend the implementation to include them, keep them in the grammar and solve the remaining issues, include them in the tutorial.\nor 2. delete the rules from the grammar, the functions from the serializer and finally the tests.\nElena",
      "parentUuid": "822a0467_7ab98ab4",
      "range": {
        "startLine": 849,
        "startChar": 3,
        "endLine": 849,
        "endChar": 11
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "098109a8_f7255874",
        "filename": "src/test/java/de/ids_mannheim/korap/query/test/cqp/CQPQueryProcessorTest.java",
        "patchSetId": 1
      },
      "lineNbr": 849,
      "author": {
        "id": 19
      },
      "writtenOn": "2022-11-24T12:39:29Z",
      "side": 1,
      "message": "Hm ... good question. For the moment, better write a comment in there that says \"CQP doesn\u0027t support relational queries like that\", so we know, that \"Ignore\" doesn\u0027t mean: \"Not implemented yet\", but \"Probably will not be implemented at all\".",
      "parentUuid": "f924432d_23cbc2cd",
      "range": {
        "startLine": 849,
        "startChar": 3,
        "endLine": 849,
        "endChar": 11
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "efac0329_010bbb7b",
        "filename": "src/test/java/de/ids_mannheim/korap/query/test/cqp/CQPQueryProcessorTest.java",
        "patchSetId": 1
      },
      "lineNbr": 942,
      "author": {
        "id": 19
      },
      "writtenOn": "2022-09-06T10:08:09Z",
      "side": 1,
      "message": "Can you show us examples for queries like\n\n`der (große|ganz^große) ^ Wagen`\n\nand what they do? (Just so we know how to interpret the result in the frontend.)",
      "range": {
        "startLine": 942,
        "startChar": 16,
        "endLine": 942,
        "endChar": 26
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc3945b6_c38155bd",
        "filename": "src/test/java/de/ids_mannheim/korap/query/test/cqp/CQPQueryProcessorTest.java",
        "patchSetId": 1
      },
      "lineNbr": 942,
      "author": {
        "id": 36
      },
      "writtenOn": "2022-11-17T13:47:07Z",
      "side": 1,
      "message": "Alignment is in the same situation as relational operators: comes from the PQ+ implementation (together with the tests) and i couldn\u0027t find an equivalent in CQP; there are some display options, available as commands in cqp, but not this specific one. Same type of decision that we should take: keep the alignment mechanism as an extension of CQP or eliminate it from the implementation. At this point, all the tests in PQ are passing in CQP also, but i actually don\u0027t  understand how it works, didn\u0027t investigate it since i didn\u0027t know if we keep it. Therefore, i cannot show the examples you asked. Eliza pointed me to this link, section 3.8:  http://nkjp.pl/poliqarp/help/ense3.html",
      "parentUuid": "efac0329_010bbb7b",
      "range": {
        "startLine": 942,
        "startChar": 16,
        "endLine": 942,
        "endChar": 26
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3385a05_aca6be35",
        "filename": "src/test/java/de/ids_mannheim/korap/query/test/cqp/CQPQueryProcessorTest.java",
        "patchSetId": 1
      },
      "lineNbr": 942,
      "author": {
        "id": 19
      },
      "writtenOn": "2022-11-24T12:39:29Z",
      "side": 1,
      "message": "I see. Here I would say: Keep it when it works. But I am still curious if a query like \"([base\u003da]^[base\u003db]^[base\u003dc])|[base\u003dd]\" is really valid. I didn\u0027t know we had this in the PQ+ grammar.",
      "parentUuid": "fc3945b6_c38155bd",
      "range": {
        "startLine": 942,
        "startChar": 16,
        "endLine": 942,
        "endChar": 26
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46ea7e88_d9b69eec",
        "filename": "src/test/java/de/ids_mannheim/korap/query/test/cqp/CQPQueryProcessorTest.java",
        "patchSetId": 1
      },
      "lineNbr": 1203,
      "author": {
        "id": 19
      },
      "writtenOn": "2022-09-06T10:08:09Z",
      "side": 1,
      "message": "Here I think ignoring is a good strategy - please keep it. We may want to extend CQP for query fragments and that\u0027s probably the right way to do in the future!",
      "range": {
        "startLine": 1203,
        "startChar": 3,
        "endLine": 1203,
        "endChar": 11
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1039dc31_79a15503",
        "filename": "src/test/java/de/ids_mannheim/korap/query/test/cqp/CQPQueryProcessorTest.java",
        "patchSetId": 1
      },
      "lineNbr": 1203,
      "author": {
        "id": 36
      },
      "writtenOn": "2022-11-17T13:59:43Z",
      "side": 1,
      "message": "yes, same situation as with relational operators and alignment, but here i also eliminated the rule from the grammar. (don\u0027t remember why i treated these cases differently...)",
      "parentUuid": "46ea7e88_d9b69eec",
      "range": {
        "startLine": 1203,
        "startChar": 3,
        "endLine": 1203,
        "endChar": 11
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eda48001_2507ac3a",
        "filename": "src/test/java/de/ids_mannheim/korap/query/test/cqp/CQPQueryProcessorTest.java",
        "patchSetId": 1
      },
      "lineNbr": 1203,
      "author": {
        "id": 19
      },
      "writtenOn": "2022-11-24T12:39:29Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1039dc31_79a15503",
      "range": {
        "startLine": 1203,
        "startChar": 3,
        "endLine": 1203,
        "endChar": 11
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0fdaba48_6321af44",
        "filename": "src/test/java/de/ids_mannheim/korap/query/test/cqp/CQPSkipSentenceBoundaries.java",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 19
      },
      "writtenOn": "2022-09-06T10:08:09Z",
      "side": 1,
      "message": "Here is no test.",
      "range": {
        "startLine": 41,
        "startChar": 4,
        "endLine": 41,
        "endChar": 39
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1dcdbd9d_aed46b82",
        "filename": "src/test/java/de/ids_mannheim/korap/query/test/cqp/CQPSkipSentenceBoundaries.java",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 36
      },
      "writtenOn": "2022-11-17T14:12:11Z",
      "side": 1,
      "message": "There will be asserts in the following commit.",
      "parentUuid": "0fdaba48_6321af44",
      "range": {
        "startLine": 41,
        "startChar": 4,
        "endLine": 41,
        "endChar": 39
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f923ff61_c9abb446",
        "filename": "src/test/java/de/ids_mannheim/korap/query/test/cqp/CQPSkipSentenceBoundaries.java",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 19
      },
      "writtenOn": "2022-09-06T10:08:09Z",
      "side": 1,
      "message": "What is this meant to do?",
      "range": {
        "startLine": 43,
        "startChar": 2,
        "endLine": 43,
        "endChar": 34
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8eebd018_3a14d321",
        "filename": "src/test/java/de/ids_mannheim/korap/query/test/cqp/CQPSkipSentenceBoundaries.java",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 36
      },
      "writtenOn": "2022-11-17T14:41:15Z",
      "side": 1,
      "message": "According to the CQP tutorial, it should return all NOUNS (pos \u003d NNS) that are not parts of a NP...\n\"the name of a structural attribute (here NP) evaluates to TRUE if the corresponding token is contained in a region of this attribute (here, a \u003cnp\u003e region)\"",
      "parentUuid": "f923ff61_c9abb446",
      "range": {
        "startLine": 43,
        "startChar": 2,
        "endLine": 43,
        "endChar": 34
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "140d004b_8080aad7",
        "filename": "src/test/java/de/ids_mannheim/korap/query/test/cqp/CQPSkipSentenceBoundaries.java",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 19
      },
      "writtenOn": "2022-11-24T12:39:29Z",
      "side": 1,
      "message": "So this would translate to an \"operation:exclusion\" in KoralQuery, I guess? How can the parser know, that np is a region and not, say, a POS marker?",
      "parentUuid": "8eebd018_3a14d321",
      "range": {
        "startLine": 43,
        "startChar": 2,
        "endLine": 43,
        "endChar": 34
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a8b1878_1c31ef59",
        "filename": "src/test/java/de/ids_mannheim/korap/query/test/cqp/CQPSkipSentenceBoundaries.java",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 36
      },
      "writtenOn": "2022-11-25T09:03:30Z",
      "side": 1,
      "message": "it could be recognised as an skey (key dedicated to spans, which is not enclosed in \"\"); we could allow term to be a span... Or we could ignore the feature 😊",
      "parentUuid": "140d004b_8080aad7",
      "range": {
        "startLine": 43,
        "startChar": 2,
        "endLine": 43,
        "endChar": 34
      },
      "revId": "f7cf4bbbc7132a5cebde11dd916f9ae39231b25a",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    }
  ]
}