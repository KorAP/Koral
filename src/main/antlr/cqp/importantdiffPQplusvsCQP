+-----------------------------------+--------------------------------------------------+----------------------------------------------------------------+
| feature   in PQ                   | feature in CQP                                   | COMMENT                                                        |
+-----------------------------------+--------------------------------------------------+----------------------------------------------------------------+
|                                   | ";" mandatory at the end of the request          |                                                                |
+-----------------------------------+--------------------------------------------------+----------------------------------------------------------------+
| /x                                |                                                  | extends the match to the whole word that contains that match;  |
+-----------------------------------+--------------------------------------------------+----------------------------------------------------------------+
|                                   | %l                                               | is the same as the escape sequence                             |
+-----------------------------------+--------------------------------------------------+----------------------------------------------------------------+
| search over a string with or      | search over a string only with qoutes            | use regex instead of words in token?                           |
| without double quotes             | or double quotes                                 |                                                                |
+-----------------------------------+--------------------------------------------------+----------------------------------------------------------------+
|                                   | !(term)                                          | negation outside brackets for a term and termGroup:            |
|                                   |                                                  | [(lemma="go") & !(word="went"%c |   word="gone"%c)];           |
+-----------------------------------+--------------------------------------------------+----------------------------------------------------------------+
| foundry/layer                     | ?/p-attributes/value pairs                       | we need to extend CQP with the foundry feature?                |
+-----------------------------------+--------------------------------------------------+----------------------------------------------------------------+
| [n] means maximum n times         | [n] means exactly n times                        | at repetition, range                                           |
+-----------------------------------+--------------------------------------------------+----------------------------------------------------------------+
| span   segments:<corenlp/c=NP>    | <np> []* </np>;                                  | with structural attributes                                     |
+-----------------------------------+--------------------------------------------------+----------------------------------------------------------------+
| {1: ...}                          | @ or @[]; label:".." or label:[],                | class operators are marked differentely;                       |
|                                   | where label is   WORD                            | in CQP are called   anchor points;                             |
|                                   |                                                  | ClassOut  parameter of   koral:group in KoralQuery is a number |
+-----------------------------------+--------------------------------------------------+----------------------------------------------------------------+
| positional operators              | structural attributes                            |                                                                |
+-----------------------------------+--------------------------------------------------+----------------------------------------------------------------+
| contains(<base/s=s>,   "copil")   | <s> []* "copil" []* </s>;                        | with structural attributes                                     |
+-----------------------------------+--------------------------------------------------+----------------------------------------------------------------+
| startsWith(<base/s=s>,   "copil") | <s>    "copil";                                  |                                                                |
+-----------------------------------+--------------------------------------------------+----------------------------------------------------------------+
| endsWith(<base/s=s>,   "copil")   | "copil" </s>;                                    |                                                                |
+-----------------------------------+--------------------------------------------------+----------------------------------------------------------------+
| matches(<base/s=s>,   "copil")    | <s>"copil"</s>;                                  |                                                                |
+-----------------------------------+--------------------------------------------------+----------------------------------------------------------------+
| overlaps()                        | ???                                              |                                                                |
+-----------------------------------+--------------------------------------------------+----------------------------------------------------------------+
| focus(der {Baum});                | MU(meet "Baum", "der", -1, 1)                    | !!!                                                            |
+-----------------------------------+--------------------------------------------------+----------------------------------------------------------------+
|                                   |                                                  | MU(meet (meet "color" "de" 1 1)   "piel" 2 2);  focus on color |
+-----------------------------------+--------------------------------------------------+----------------------------------------------------------------+
| focus(color {[de]} piel)          | MU(meet "de" (meet "color"   "piel" 2 2) -1 -1); | it doesn't work with [] instead of ""                          |
+-----------------------------------+--------------------------------------------------+----------------------------------------------------------------+
|                                   |                                                  |                                                                |
+-----------------------------------+--------------------------------------------------+----------------------------------------------------------------+
|                                   | ? longest, ? Shortest                            | matching strategy: greedy vs non greedy on terms matching      |
+-----------------------------------+--------------------------------------------------+----------------------------------------------------------------+